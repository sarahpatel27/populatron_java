/*
 * This Java source file was generated by the Gradle 'init' task.
 */

import static org.junit.Assert.assertEquals;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.assertEquals;

import java.io.ByteArrayOutputStream;
import java.io.PrintStream;

import org.junit.Test;


public class PopulationCounterTest {
    @Test
    public void testSomeLibraryMethod() throws Exception {

        // Setup
        String expected = "World population is: 1,347,982,728\n";

        // https://stackoverflow.com/questions/8708342/redirect-console-output-to-string-in-java
        ByteArrayOutputStream baos = new ByteArrayOutputStream();
        PrintStream ps = new PrintStream(baos);
        PrintStream old = System.out;
        System.setOut(ps);

        // Exercise
        PopulationCounter.main(new String[] {"./data/worldcitiespop.csv"});

        // Assert
        System.out.flush();
        String output = baos.toString();
        assertEquals("Population counter should return correct total", expected, output );

        // Teardown
        System.setOut(old);


    @Test
    public void totalWorldPop() throws IOException {
    String testFilePath = "test_population_data.csv";
    List<String> testDataLines = Arrays.asList(
                "City,State,Country,Continent,Population",
                "New York,New York,USA,North America,8623000",
                "Los Angeles,California,USA,North America,3994000",
                "Chicago,Illinois,USA,North America,2719000");
        Files.write(Paths.get(testFilePath), testDataLines, StandardCharsets.ISO_8859_1);

        
        List<String> testPopData = Files.readAllLines(Paths.get(testFilePath), StandardCharsets.ISO_8859_1);
        ParseData parser = new ParseData(testPopData);
        int totalPop = parser.sum(parser.getPopData());

        assertEquals(49997236, totalPop);

        Files.deleteIfExists(Paths.get(testFilePath));
    }
    
    @Test
    public void parsingLines() {
        String line = "New York,United States,North America,8398748";
        PopData expected = new PopData("New York", "United States", "North America",
            8398748L);
    
        PopData actual = PopData.parseFromLine(line);
    
        assertEquals(expected.getPopData(), actual.getPopData());
    }
    
    }
}
